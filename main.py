import os
import subprocess
import requests
import json
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload

# === CONFIG ===
BARK_AUDIO_URL = os.getenv("BARK_AUDIO_URL")
BACKGROUND_IMAGE = "background.jpg"

print("🔊 Downloading Bark audio...")

response = requests.get(BARK_AUDIO_URL)
print(f"Status code: {response.status_code}")
if response.status_code != 200:
    raise Exception(f"Failed to download audio! HTTP {response.status_code}")

with open("voice.wav", "wb") as f:
    f.write(response.content)

# Validate downloaded file
size = os.path.getsize("voice.wav")
print(f"Downloaded file size: {size} bytes")
if size < 1000:
    raise Exception("Downloaded voice.wav is too small, probably invalid!")

print("🎞️ Creating video using FFmpeg...")

# Run ffmpeg
subprocess.run([
    "ffmpeg",
    "-y",
    "-loop", "1",
    "-i", BACKGROUND_IMAGE,
    "-i", "voice.wav",
    "-c:v", "libx264",
    "-tune", "stillimage",
    "-c:a", "aac",
    "-b:a", "192k",
    "-pix_fmt", "yuv420p",
    "-shortest",
    "-vf", "scale=1080:1920",
    "output.mp4"
], check=True)

print("✅ Video created: output.mp4")

# ================================================
# 📤 Uploading to YouTube Shorts (DISABLED FOR TEST)
# ================================================
if False:  # <-- disables this block safely!
    print("📤 Uploading to YouTube Shorts...")

    creds = Credentials.from_authorized_user_info(
        json.loads(os.getenv("YT_CREDS_JSON")),
        ["https://www.googleapis.com/auth/youtube.upload"]
    )

    youtube = build("youtube", "v3", credentials=creds)

    body = {
        "snippet": {
            "title": "Auto POV Short #1",
            "description": "Scary POV Short generated by my AI bot 🤖",
            "tags": ["AI", "Shorts", "Horror"],
            "categoryId": "22"
        },
        "status": {
            "privacyStatus": "public",
            "selfDeclaredMadeForKids": False
        }
    }

    media = MediaFileUpload("output.mp4", chunksize=-1, resumable=True)

    request = youtube.videos().insert(
        part="snippet,status",
        body=body,
        media_body=media
    )

    response = None
    while response is None:
        status, response = request.next_chunk()
        if status:
            print(f"Uploading... {int(status.progress() * 100)}%")

    print(f"✅ Uploaded: https://www.youtube.com/watch?v={response['id']}")



# import os
# import subprocess
# import requests
# import json
# from google.oauth2.credentials import Credentials
# from googleapiclient.discovery import build
# from googleapiclient.http import MediaFileUpload

# # === CONFIG ===
# BARK_AUDIO_URL = os.getenv("BARK_AUDIO_URL")
# BACKGROUND_IMAGE = "background.jpg"

# print("🔊 Downloading Bark audio...")

# response = requests.get(BARK_AUDIO_URL)
# print(f"Status code: {response.status_code}")
# if response.status_code != 200:
#     raise Exception(f"Failed to download audio! HTTP {response.status_code}")

# with open("voice.wav", "wb") as f:
#     f.write(response.content)

# # Validate downloaded file
# size = os.path.getsize("voice.wav")
# print(f"Downloaded file size: {size} bytes")
# if size < 1000:
#     raise Exception("Downloaded voice.wav is too small, probably invalid!")

# print("🎞️ Creating video using FFmpeg...")

# # Run ffmpeg
# subprocess.run([
#     "ffmpeg",
#     "-y",
#     "-loop", "1",
#     "-i", BACKGROUND_IMAGE,
#     "-i", "voice.wav",
#     "-c:v", "libx264",
#     "-tune", "stillimage",
#     "-c:a", "aac",
#     "-b:a", "192k",
#     "-pix_fmt", "yuv420p",
#     "-shortest",
#     "-vf", "scale=1080:1920",
#     "output.mp4"
# ], check=True)

# print("✅ Video created: output.mp4")

# print("📤 Uploading to YouTube Shorts...")

# creds = Credentials.from_authorized_user_info(
#     json.loads(os.getenv("YT_CREDS_JSON")),
#     ["https://www.googleapis.com/auth/youtube.upload"]
# )

# youtube = build("youtube", "v3", credentials=creds)

# body = {
#     "snippet": {
#         "title": "Auto POV Short #1",
#         "description": "Scary POV Short generated by my AI bot 🤖",
#         "tags": ["AI", "Shorts", "Horror"],
#         "categoryId": "22"
#     },
#     "status": {
#         "privacyStatus": "public",
#         "selfDeclaredMadeForKids": False
#     }
# }

# media = MediaFileUpload("output.mp4", chunksize=-1, resumable=True)

# request = youtube.videos().insert(
#     part="snippet,status",
#     body=body,
#     media_body=media
# )

# response = None
# while response is None:
#     status, response = request.next_chunk()
#     if status:
#         print(f"Uploading... {int(status.progress() * 100)}%")

# print(f"✅ Uploaded: https://www.youtube.com/watch?v={response['id']}")

